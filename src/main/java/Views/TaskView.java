
package Views;

import Controllers.RepublicController;
import Models.FeedbackModel;
import Models.TaskModel;
import Models.UserModel;
import java.time.format.DateTimeFormatter;


public class TaskView extends javax.swing.JFrame {
    private RepublicController republicController;
    private TaskModel taskModel;
    private UserModel userModel;
    
    private FeedbackModel feedbackModel;
    private boolean isResponsible;
    
    public void closeView() {
        this.dispose();
    }
    
    public void removeDone() {
        this.doneTaskButton.setVisible(false);
    }
    
    public void addDone() {
        this.doneTaskButton.setVisible(true);
    }
    
    public void setTaskModel(TaskModel taskModel) {
        this.taskModel = taskModel;
    }
    
    public void setUserModel(UserModel userModel) {
        this.userModel = userModel;
    }
    
    public void setFeedbackModel(FeedbackModel feedbackModel) {
        this.feedbackModel = feedbackModel;
    }
    
    public void load() {
        this.titleLabel.setText(this.taskModel.getTitle());
        this.descriptionPanel.setText(this.taskModel.getDescription());
        this.userOwnerLabel.setText("Responsável: " + this.userModel.getName());
        this.createdLabel.setText("Data de criação: " + this.taskModel.getCreatedAt().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")));
        this.expiresLabel.setText("Data de expiração: " + this.taskModel.getExpiresAt().toString().replace("T", " "));
        
        if (this.taskModel.getUpdatedAt() == null) {
            this.updatedLabel.setText("Data de atualização: -");
        } else {
            this.updatedLabel.setText("Data de atualização: " + this.taskModel.getUpdatedAt().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")));
        }
       
        if (this.feedbackModel != null ) {
            this.commentArea.setText(this.feedbackModel.getComment());
            this.scoreSpinner.setValue(this.feedbackModel.getScore());
        }
        
        if (this.userModel.getUuid().equals(taskModel.getUserUuid())) {
            this.feedbackPanel.setVisible(false);
            this.addDone();
        }
        
        if (
            this.userModel.getUuid().equals(this.republicController.getRepublic().getUserUuid())
            ||
            this.userModel.getUuid().equals(taskModel.getUserUuid())
        ) {
            this.addDone();
        } else {
            this.removeDone();
        }

        if (!this.taskModel.getIsDone()) {
            this.feedbackPanel.setVisible(false);
        } else {
            this.doneTaskButton.setVisible(false);
            if (!this.userModel.getUuid().equals(taskModel.getUserUuid())) {
                this.feedbackPanel.setVisible(true);
            }
        }
    }

    /**
     * Creates new form TaskView
     */
    public TaskView(RepublicController republicController) {
        this.republicController = republicController;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        scrollPanel = new javax.swing.JScrollPane();
        descriptionPanel = new javax.swing.JTextPane();
        userOwnerLabel = new javax.swing.JLabel();
        expiresLabel = new javax.swing.JLabel();
        createdLabel = new javax.swing.JLabel();
        updatedLabel = new javax.swing.JLabel();
        doneTaskButton = new javax.swing.JButton();
        separator2 = new javax.swing.JSeparator();
        feedbackPanel = new javax.swing.JPanel();
        sendFeedbackButton = new javax.swing.JButton();
        scoreSpinner = new javax.swing.JSpinner();
        scrollPanel2 = new javax.swing.JScrollPane();
        commentArea = new javax.swing.JTextArea();
        editFeedbackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        contentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tarefa"));

        titleLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Título");

        descriptionPanel.setEditable(false);
        descriptionPanel.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        descriptionPanel.setText("Lorem ipsum dolor sit amet consectetur adipiscing elit ridiculus duis, mus scelerisque rhoncus vehicula pellentesque et mollis vel eros, primis fames dictum nisi per ultrices odio id. Sem nec scelerisque lectus elementum class tincidunt leo penatibus, consequat volutpat interdum fames accumsan nullam ornare sollicitudin proin, erat integer nibh fusce augue eu porta. Nisi ut placerat ante diam accumsan fusce laoreet, ac a dis aliquam quis vulputate, mollis ad sapien parturient lacus dictumst.");
        scrollPanel.setViewportView(descriptionPanel);

        userOwnerLabel.setText("Responsável:");

        expiresLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        expiresLabel.setText("Expiração: ");

        createdLabel.setText("Criado em");

        updatedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        updatedLabel.setText("Atualizado em");

        doneTaskButton.setBackground(new java.awt.Color(76, 180, 82));
        doneTaskButton.setForeground(new java.awt.Color(255, 255, 255));
        doneTaskButton.setText("Concluir Tarefa");
        doneTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneTaskButtonActionPerformed(evt);
            }
        });

        feedbackPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Feedback"));

        sendFeedbackButton.setBackground(new java.awt.Color(76, 180, 82));
        sendFeedbackButton.setForeground(new java.awt.Color(255, 255, 255));
        sendFeedbackButton.setText("Enviar Feedback");
        sendFeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFeedbackButtonActionPerformed(evt);
            }
        });

        scoreSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        scoreSpinner.setBorder(javax.swing.BorderFactory.createTitledBorder("Score"));

        scrollPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Comentário"));

        commentArea.setColumns(20);
        commentArea.setRows(5);
        scrollPanel2.setViewportView(commentArea);

        editFeedbackButton.setBackground(new java.awt.Color(176, 180, 82));
        editFeedbackButton.setForeground(new java.awt.Color(255, 255, 255));
        editFeedbackButton.setText("Alterar Feedback");
        editFeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFeedbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout feedbackPanelLayout = new javax.swing.GroupLayout(feedbackPanel);
        feedbackPanel.setLayout(feedbackPanelLayout);
        feedbackPanelLayout.setHorizontalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                    .addGroup(feedbackPanelLayout.createSequentialGroup()
                        .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(feedbackPanelLayout.createSequentialGroup()
                                .addComponent(sendFeedbackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editFeedbackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scoreSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        feedbackPanelLayout.setVerticalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, feedbackPanelLayout.createSequentialGroup()
                .addComponent(scrollPanel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scoreSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendFeedbackButton)
                    .addComponent(editFeedbackButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(feedbackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createdLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userOwnerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(expiresLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updatedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))
                    .addComponent(separator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, contentPanelLayout.createSequentialGroup()
                        .addComponent(doneTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(expiresLabel)
                    .addComponent(userOwnerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createdLabel)
                    .addComponent(updatedLabel))
                .addGap(18, 18, 18)
                .addComponent(doneTaskButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedbackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneTaskButtonActionPerformed
        this.republicController.taskDone(this.taskModel);
    }//GEN-LAST:event_doneTaskButtonActionPerformed

    private void sendFeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFeedbackButtonActionPerformed
        try {
            String comment = this.commentArea.getText();
            Double score = Double.parseDouble(this.scoreSpinner.getValue().toString());
            this.republicController.sendFeedback(this.taskModel, comment, score);
        } catch (Exception error) {
            System.out.println(error.getMessage());
        }
    }//GEN-LAST:event_sendFeedbackButtonActionPerformed

    private void editFeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFeedbackButtonActionPerformed
        try {
            String comment = this.commentArea.getText();
            Double score = Double.parseDouble(this.scoreSpinner.getValue().toString());
            this.republicController.updateFeedback(this.taskModel, comment, score);
        } catch (Exception error) {
            System.out.println(error.getMessage());
        }
    }//GEN-LAST:event_editFeedbackButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea commentArea;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel createdLabel;
    private javax.swing.JTextPane descriptionPanel;
    private javax.swing.JButton doneTaskButton;
    private javax.swing.JButton editFeedbackButton;
    private javax.swing.JLabel expiresLabel;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JSpinner scoreSpinner;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JScrollPane scrollPanel2;
    private javax.swing.JButton sendFeedbackButton;
    private javax.swing.JSeparator separator2;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel updatedLabel;
    private javax.swing.JLabel userOwnerLabel;
    // End of variables declaration//GEN-END:variables
}
